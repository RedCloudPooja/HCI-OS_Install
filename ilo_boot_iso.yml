---
- name: Manage HPE iLO to attach ISO, set boot order, and reboot
  hosts: ilo_server
  gather_facts: false
  collections:
    - community.general
  tasks:
    - name: Debug inventory variables
      ansible.builtin.debug:
        var: hostvars[inventory_hostname]
      delegate_to: localhost

    - name: Ensure server is powered on
      community.general.redfish_command:
        category: Systems
        command: PowerOn
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      delegate_to: localhost

    - name: Check if virtual media is already mounted
      community.general.redfish_info:
        category: Manager
        command: GetVirtualMedia
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      register: vm_status
      delegate_to: localhost

    - name: Attach ISO as virtual media
      community.general.redfish_command:
        category: Manager
        command: VirtualMediaInsert
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
        virtual_media:
          image_url: "{{ iso_url }}"
          media_types:
            - CD
            - DVD
      delegate_to: localhost

    - name: Get current boot configuration
      community.general.redfish_info:
        category: Systems
        command: GetSystem
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      register: boot_status_before
      delegate_to: localhost

    - name: Debug current boot configuration
      ansible.builtin.debug:
        var: boot_status_before.redfish_facts.system.entries[0].Boot
      delegate_to: localhost

    - name: Clear UEFI boot entries to prioritize CD-ROM
      community.general.redfish_command:
        category: Systems
        command: ClearBootOptions
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      delegate_to: localhost
      ignore_errors: true

    - name: Set boot order to prioritize iLO Virtual CD-ROM
      community.general.redfish_command:
        category: Systems
        command: BootSourceOverride
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
        boot:
          bootdevice: Cd
          enabled: Once
      when: vm_status.redfish_facts.virtual_media.entries[0][1] | selectattr('MediaTypes', 'contains', 'CD') | map(attribute='ConnectedVia') | first == "URI"
      delegate_to: localhost

    - name: Wait for iLO to process boot order change
      ansible.builtin.pause:
        seconds: 10
      delegate_to: localhost

    - name: Get updated boot configuration
      community.general.redfish_info:
        category: Systems
        command: GetSystem
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      register: boot_status_after
      delegate_to: localhost

    - name: Debug updated boot configuration
      ansible.builtin.debug:
        var: boot_status_after.redfish_facts.system.entries[0].Boot
      delegate_to: localhost

    - name: Get server power state before reboot
      community.general.redfish_info:
        category: Systems
        command: GetSystem
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      register: power_state_before
      delegate_to: localhost

    - name: Debug server power state before reboot
      ansible.builtin.debug:
        var: power_state_before.redfish_facts.system.entries[0].PowerState
      delegate_to: localhost

    - name: Reboot the server
      community.general.redfish_command:
        category: Systems
        command: PowerForceRestart
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      delegate_to: localhost

    - name: Wait for server to power off
      ansible.builtin.wait_for:
        host: "{{ baseuri }}"
        port: 443
        state: stopped
        timeout: 60
      delegate_to: localhost
      ignore_errors: true

    - name: Wait for server to power on
      ansible.builtin.wait_for:
        host: "{{ baseuri }}"
        port: 443
        state: started
        timeout: 300
      delegate_to: localhost

    - name: Get server power state after reboot
      community.general.redfish_info:
        category: Systems
        command: GetSystem
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      register: power_state_after
      delegate_to: localhost

    - name: Debug server power state after reboot
      ansible.builtin.debug:
        var: power_state_after.redfish_facts.system.entries[0].PowerState
      delegate_to: localhost

    - name: Wait for iLO reboot completion
      community.general.ilo_redfish_command:
        category: Systems
        command: WaitforiLORebootCompletion
        baseuri: "{{ baseuri }}"
        username: "{{ username }}"
        password: "{{ password }}"
      delegate_to: localhost
